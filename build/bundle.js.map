{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/typescript/data/dataFormat.ts","../../src/typescript/data/weaponData.ts","../../node_modules/svelte/store/index.mjs","../../src/typescript/data/thargoidData.ts","../../src/typescript/util.ts","../../src/typescript/store.ts","../../src/components/settings/ship-input/weapon/Weapon.svelte","../../src/typescript/data/distributorData.ts","../../src/components/settings/SettingsUi.svelte","../../src/components/data-display/info-table/InfoTable.svelte","../../src/components/data-display/MainDataDisplay.svelte","../../src/components/time-on-target-chart/interceptor-data/InterceptorData.svelte","../../src/components/time-on-target-chart/TimeOnTargetChart.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export var WeaponType;\r\n(function (WeaponType) {\r\n    WeaponType[\"FIXED\"] = \"Fixed\";\r\n    WeaponType[\"GIMBALLED\"] = \"Gimballed\";\r\n    WeaponType[\"TURRETED\"] = \"Turreted\";\r\n    WeaponType[\"DUMB_FIRE\"] = \"Dumbfire\";\r\n})(WeaponType || (WeaponType = {}));\r\n","import { WeaponType } from \"./dataFormat\";\r\n// TODO: There is no great representation of fixed vs turret right now.\r\n//  Having to maintain multiple objects is not ideal, but it will work for a short time.\r\n//  Agreed one object would be better especially if we add weapons it will be a nightmare currently - Hero\r\n// TODO: We may also want to add more weapons in future to have all AX weapon classes\r\n//  However that would need to be done after we rework the weapon data storage\r\n// distroDraw only matters for gauss but I put it in for the others as well\r\n// however the other weapons fire more then 1 shot per second\r\n// so it would need to be used alongside with rate of fire if we were to use draw for something else in the future\r\nexport const gauss = {\r\n    weaponName: 'Guardian Gauss Cannon',\r\n    shortName: 'gauss',\r\n    weaponType: WeaponType.FIXED,\r\n    options: [\r\n        {\r\n            weaponSize: 1,\r\n            clipSize: 80,\r\n            rof: 0.487804878,\r\n            reloadTime: 4,\r\n            distroDraw: 3.8,\r\n            damage: 40,\r\n            axPercent: 50,\r\n            axDamage: 20.00,\r\n            sustainedAxDps: 9.52,\r\n            nDps: 0,\r\n            armourPierce: 140,\r\n            falloffRange: 1500,\r\n            falloffFactor: 1,\r\n            maxRange: 3000,\r\n            stdAmmoPercent: 1.15,\r\n            premAmmoPercent: 1.30\r\n        },\r\n        {\r\n            weaponSize: 2,\r\n            clipSize: 80,\r\n            rof: 0.487804878,\r\n            reloadTime: 4,\r\n            distroDraw: 7.2,\r\n            damage: 70,\r\n            axPercent: 50,\r\n            axDamage: 35.00,\r\n            sustainedAxDps: 16.67,\r\n            nDps: 0,\r\n            armourPierce: 140,\r\n            falloffRange: 1500,\r\n            falloffFactor: 1,\r\n            maxRange: 3000,\r\n            stdAmmoPercent: 1.15,\r\n            premAmmoPercent: 1.30\r\n        }\r\n    ]\r\n};\r\nconst plasma = {\r\n    weaponName: 'Guardian Plasma Charger',\r\n    shortName: 'plasma',\r\n    weaponType: WeaponType.FIXED,\r\n    options: [\r\n        {\r\n            weaponSize: 1,\r\n            clipSize: 15,\r\n            rof: 0.5,\r\n            reloadTime: 3,\r\n            distroDraw: 0.68,\r\n            damage: 51,\r\n            axPercent: 50,\r\n            axDamage: 25.50,\r\n            sustainedAxDps: 11.59,\r\n            nDps: 0,\r\n            armourPierce: 65,\r\n            falloffRange: 1000,\r\n            falloffFactor: 1,\r\n            maxRange: 3000,\r\n            stdAmmoPercent: 1.15,\r\n            premAmmoPercent: 1.30\r\n        },\r\n        {\r\n            weaponSize: 3,\r\n            clipSize: 15,\r\n            rof: 0.5555555556,\r\n            reloadTime: 3,\r\n            distroDraw: 1.25,\r\n            damage: 119,\r\n            axPercent: 50,\r\n            axDamage: 59.50,\r\n            sustainedAxDps: 29.75,\r\n            nDps: 0,\r\n            armourPierce: 95,\r\n            falloffRange: 1000,\r\n            falloffFactor: 1,\r\n            maxRange: 3000,\r\n            stdAmmoPercent: 1.15,\r\n            premAmmoPercent: 1.30\r\n        }\r\n    ]\r\n};\r\nconst shard = {\r\n    weaponName: 'Guardian Shard Cannon',\r\n    shortName: 'shard',\r\n    weaponType: WeaponType.FIXED,\r\n    options: [\r\n        {\r\n            weaponSize: 1,\r\n            clipSize: 5,\r\n            rof: 1.667,\r\n            reloadTime: 5,\r\n            distroDraw: 0.42,\r\n            damage: 43.68,\r\n            axPercent: 50,\r\n            axDamage: 21.84,\r\n            sustainedAxDps: 13.65,\r\n            nDps: 0,\r\n            armourPierce: 30,\r\n            falloffRange: 1700,\r\n            falloffFactor: 1,\r\n            maxRange: 1700,\r\n            stdAmmoPercent: 1.15,\r\n            premAmmoPercent: 1.30\r\n        },\r\n        {\r\n            weaponSize: 2,\r\n            clipSize: 5,\r\n            rof: 1.667,\r\n            reloadTime: 5,\r\n            distroDraw: 0.65,\r\n            damage: 81.24,\r\n            axPercent: 50,\r\n            axDamage: 40.62,\r\n            sustainedAxDps: 25.39,\r\n            nDps: 0,\r\n            armourPierce: 45,\r\n            falloffRange: 1700,\r\n            falloffFactor: 1,\r\n            maxRange: 1700,\r\n            stdAmmoPercent: 1.15,\r\n            premAmmoPercent: 1.30\r\n        },\r\n        {\r\n            weaponSize: 3,\r\n            clipSize: 5,\r\n            rof: 1.667,\r\n            reloadTime: 5,\r\n            distroDraw: 1.4,\r\n            damage: 114,\r\n            axPercent: 50,\r\n            axDamage: 57.00,\r\n            sustainedAxDps: 35.63,\r\n            nDps: 0,\r\n            armourPierce: 60,\r\n            falloffRange: 1700,\r\n            falloffFactor: 1,\r\n            maxRange: 1700,\r\n            stdAmmoPercent: 1.15,\r\n            premAmmoPercent: 1.30\r\n        }\r\n    ]\r\n};\r\nconst axmc = {\r\n    weaponName: 'Anti-Xeno Multi Cannon',\r\n    shortName: 'axmc',\r\n    weaponType: WeaponType.FIXED,\r\n    options: [\r\n        {\r\n            weaponSize: 2,\r\n            clipSize: 100,\r\n            rof: 7.14,\r\n            reloadTime: 4,\r\n            distroDraw: 0.11,\r\n            damage: 3.31,\r\n            axPercent: 66.16,\r\n            axDamage: 2.19,\r\n            sustainedAxDps: 12.17,\r\n            nDps: 0,\r\n            armourPierce: 17,\r\n            falloffRange: 2000,\r\n            falloffFactor: 1,\r\n            maxRange: 4000,\r\n            stdAmmoPercent: 1.05,\r\n            premAmmoPercent: 1.10\r\n        },\r\n        {\r\n            weaponSize: 3,\r\n            clipSize: 100,\r\n            rof: 5.88,\r\n            reloadTime: 4,\r\n            distroDraw: 0.18,\r\n            damage: 6.12,\r\n            axPercent: 64.19,\r\n            axDamage: 3.92,\r\n            sustainedAxDps: 18.69,\r\n            nDps: 0,\r\n            armourPierce: 33,\r\n            falloffRange: 2000,\r\n            falloffFactor: 1,\r\n            maxRange: 4000,\r\n            stdAmmoPercent: 1.05,\r\n            premAmmoPercent: 1.10\r\n        }\r\n    ]\r\n};\r\nconst axmct = {\r\n    weaponName: 'Anti-Xeno Multi Cannon (Turret)',\r\n    shortName: 'axmct',\r\n    weaponType: WeaponType.TURRETED,\r\n    options: [\r\n        {\r\n            weaponSize: 3,\r\n            clipSize: 90,\r\n            rof: 6.25,\r\n            reloadTime: 4,\r\n            distroDraw: 0.06,\r\n            damage: 3.31,\r\n            axPercent: 64.19,\r\n            axDamage: 2.12,\r\n            sustainedAxDps: 10.39,\r\n            nDps: 0,\r\n            armourPierce: 33,\r\n            falloffRange: 2000,\r\n            falloffFactor: 1,\r\n            maxRange: 4000,\r\n            stdAmmoPercent: 1.05,\r\n            premAmmoPercent: 1.10\r\n        }\r\n    ]\r\n};\r\nconst axmr = {\r\n    weaponName: 'Anti-Xeno Missile Rack',\r\n    shortName: 'axmr',\r\n    weaponType: WeaponType.DUMB_FIRE,\r\n    options: [\r\n        {\r\n            weaponSize: 2,\r\n            clipSize: 8,\r\n            rof: 0.50,\r\n            reloadTime: 5,\r\n            distroDraw: 0.14,\r\n            damage: 64.00,\r\n            axPercent: 57.81,\r\n            axDamage: 37.00,\r\n            sustainedAxDps: 14.10,\r\n            nDps: 0,\r\n            armourPierce: 60,\r\n            falloffRange: 4000,\r\n            falloffFactor: 1,\r\n            maxRange: 4000,\r\n            stdAmmoPercent: 1.05,\r\n            premAmmoPercent: 1.10\r\n        },\r\n        {\r\n            weaponSize: 3,\r\n            clipSize: 12,\r\n            rof: 0.50,\r\n            reloadTime: 5,\r\n            distroDraw: 0.24,\r\n            damage: 64.00,\r\n            axPercent: 57.81,\r\n            axDamage: 37.00,\r\n            sustainedAxDps: 15.31,\r\n            nDps: 0,\r\n            armourPierce: 60,\r\n            falloffRange: 4000,\r\n            falloffFactor: 1,\r\n            maxRange: 4000,\r\n            stdAmmoPercent: 1.05,\r\n            premAmmoPercent: 1.10\r\n        }\r\n    ]\r\n};\r\nexport const AX_WEAPONS = [\r\n    gauss, plasma, shard, axmc, axmct, axmr\r\n];\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const cyclops = {\r\n    name: \"Cyclops\",\r\n    armourRating: 100,\r\n    regenPerSecond: 3.2,\r\n    exertHp: 160\r\n};\r\nconst basilisk = {\r\n    name: \"Basilisk\",\r\n    armourRating: 140,\r\n    regenPerSecond: 7.2,\r\n    exertHp: 360\r\n};\r\nconst medusa = {\r\n    name: \"Medusa\",\r\n    armourRating: 175,\r\n    regenPerSecond: 10,\r\n    exertHp: 500\r\n};\r\nconst hydra = {\r\n    name: \"Hydra\",\r\n    armourRating: 230,\r\n    regenPerSecond: 12.8,\r\n    exertHp: 640\r\n};\r\nexport const THARGOID_TYPES = [\r\n    cyclops, basilisk, medusa, hydra\r\n];\r\n","export const MAX_AX_WEAPONS = 4;\r\n// Magic number storage:\r\nexport const MIN_GAUSS_DELAY_MS = 2050; // gauss has a minimum delay of 2050ms\r\nexport const HEATSINK_WEP_RECHARGE = 2; // each heatsinks adds 2mw to your weapon recharge\r\nexport const MS_PER_MINUTE = 60000; // ms in a minute\r\n","import { writable } from 'svelte/store';\r\nimport { THARGOID_TYPES } from './data/thargoidData';\r\nimport { MAX_AX_WEAPONS } from './util';\r\nconst buildStarterWeaponStore = () => {\r\n    const weapons = {};\r\n    for (let i = 0; i < MAX_AX_WEAPONS; i++) {\r\n        weapons[i] = { name: '', class: undefined };\r\n    }\r\n    return weapons;\r\n};\r\nexport const setEmptyTotStore = () => {\r\n    const totData = {};\r\n    for (let type of THARGOID_TYPES) {\r\n        totData[type.name] = {\r\n            basicAmmo: { adjDps: 0, tot100: 'N/A', tot75: 'N/A', tot50: 'N/A' },\r\n            standardAmmo: { adjDps: 0, tot100: 'N/A', tot75: 'N/A', tot50: 'N/A' },\r\n            premiumAmmo: { adjDps: 0, tot100: 'N/A', tot75: 'N/A', tot50: 'N/A' }\r\n        };\r\n    }\r\n    return totData;\r\n};\r\n// Input stores\r\nexport const selectedWeapons = writable(buildStarterWeaponStore());\r\nexport const range = writable(1500);\r\nexport const selectedDistributor = writable({ size: 1, class: 'A', blueprint: '', experimentEffect: '' });\r\nexport const heatsinks = writable(0);\r\n// Calculation stores\r\nexport const sdpsExtraDelay = writable(0);\r\nexport const timeOnTargetData = writable(setEmptyTotStore());\r\n","<script lang=\"ts\">\r\n    import type { AxWeapon } from '../../../../typescript/data/dataFormat';\r\n    import { AX_WEAPONS } from '../../../../typescript/data/weaponData';\r\n    import { selectedWeapons } from '../../../../typescript/store';\r\n\r\n    const findAxWeapon = (weaponName: string): AxWeapon | undefined => {\r\n        return AX_WEAPONS.find(axWeapon => axWeapon.shortName === weaponName);\r\n    };\r\n\r\n    export let index: string;\r\n\r\n    $: selectedWeapon = $selectedWeapons[index];\r\n\r\n    const updateStore = ():void => {\r\n        $selectedWeapons[index] = selectedWeapon;\r\n    }\r\n</script>\r\n\r\n<!-- svelte-ignore a11y-no-onchange -->\r\n<select class=\"dropdown-select mt-2\"\r\n        bind:value={selectedWeapon.name}\r\n        on:change={() => {\r\n            selectedWeapon.class = findAxWeapon(selectedWeapon.name)?.options[0].weaponSize;\r\n            updateStore();\r\n        }}>\r\n    <option value=\"\">No weapon</option>\r\n    {#each AX_WEAPONS as axWeapon}\r\n        <option value=\"{axWeapon.shortName}\">{axWeapon.weaponName}</option>\r\n    {/each}\r\n</select>\r\n\r\n<!-- svelte-ignore a11y-no-onchange -->\r\n{#if selectedWeapon.name}\r\n    <select class=\"dropdown-select mt-2\"\r\n            bind:value={selectedWeapon.class}\r\n            on:change={() => updateStore()}>\r\n        {#each findAxWeapon(selectedWeapon.name).options as option}\r\n            <option value=\"{option.weaponSize}\">C{option.weaponSize}</option>\r\n        {/each}\r\n    </select>\r\n{/if}\r\n","export const distributorRecharge = {\r\n    '1A': 1.8,\r\n    '1G': 2.5,\r\n    '1B': 1.7,\r\n    '1C': 1.5,\r\n    '1D': 1.4,\r\n    '1E': 1.2,\r\n    '2A': 2.2,\r\n    '2G': 3.1,\r\n    '2B': 2,\r\n    '2C': 1.8,\r\n    '2D': 1.6,\r\n    '2E': 1.4,\r\n    '3A': 2.8,\r\n    '3G': 3.9,\r\n    '3B': 2.5,\r\n    '3C': 2.3,\r\n    '3D': 2.1,\r\n    '3E': 1.8,\r\n    '4A': 3.5,\r\n    '4G': 4.9,\r\n    '4B': 3.2,\r\n    '4C': 2.9,\r\n    '4D': 2.6,\r\n    '4E': 2.3,\r\n    '5A': 4.3,\r\n    '5G': 6,\r\n    '5B': 4,\r\n    '5C': 3.6,\r\n    '5D': 3.2,\r\n    '5E': 2.9,\r\n    '6A': 5.2,\r\n    '6G': 7.3,\r\n    '6B': 4.7,\r\n    '6C': 4.3,\r\n    '6D': 3.9,\r\n    '6E': 3.4,\r\n    '7A': 6.1,\r\n    '7G': 8.5,\r\n    '7B': 5.6,\r\n    '7C': 5.1,\r\n    '7D': 4.6,\r\n    '7E': 4.1,\r\n    '8A': 7.2,\r\n    '8G': 10.1,\r\n    '8B': 6.6,\r\n    '8C': 6,\r\n    '8D': 5.4,\r\n    '8E': 4.8\r\n};\r\nexport const distributorBlueprints = [\r\n    { name: 'Charge Enhanced', shortName: 'ce', weaponRechargeModifier: .45 },\r\n    { name: 'Engine Focused', shortName: 'ef', weaponRechargeModifier: -0.05 },\r\n    { name: 'High Charge Capacity', shortName: 'hc', weaponRechargeModifier: -0.18 },\r\n    { name: 'Shielded', shortName: 'sh', weaponRechargeModifier: 0 },\r\n    { name: 'System Focused', shortName: 'sf', weaponRechargeModifier: -0.15 },\r\n    { name: 'Weapon Focused', shortName: 'wf', weaponRechargeModifier: 0.44 }\r\n];\r\nexport const distributorExperimentEffects = [\r\n    { name: 'Cluster Capacitors', shortName: 'cc', weaponRechargeModifier: -0.02 },\r\n    { name: 'Double Braced', shortName: 'db', weaponRechargeModifier: 0 },\r\n    { name: 'Flow Control', shortName: 'fc', weaponRechargeModifier: 0 },\r\n    { name: 'Stripped Down', shortName: 'sd', weaponRechargeModifier: 0 },\r\n    { name: 'Super Conduits', shortName: 'sc', weaponRechargeModifier: 0.04 }\r\n];\r\nexport const distributorSizes = [\r\n    1, 2, 3, 4, 5, 6, 7, 8\r\n];\r\nexport const distributorClasses = [\r\n    'A', 'B', 'C', 'D', 'E', 'G'\r\n];\r\n","<script lang=\"ts\">\r\n    import ShipInput from './ship-input/ShipInput.svelte';\r\n    import ShipImport from './ship-import/ShipImport.svelte';\r\n    import { range, heatsinks } from '../../typescript/store';\r\n\r\n    // Until importing is implemented, always use manual input\r\n    let isImport = false;\r\n\r\n    const inputCheck = () => {\r\n        let heatsinkInput = Number($heatsinks);\r\n        let rangeInput = Number($range);\r\n        if (!Number.isInteger(heatsinkInput) || heatsinkInput < 0 || heatsinkInput > 8) {\r\n            $heatsinks = 0;\r\n        }\r\n        // 6k may need to be changed if we add new shard cannon\r\n        if (!Number.isInteger(rangeInput) || rangeInput < 0 || rangeInput > 6000) {\r\n            $range = 1500;\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"is-flex is-flex-direction-column\">\r\n    <h1 class=\"mb-0 mt-1 has-text-centered\">Settings</h1>\r\n    <div class=\"ml-2\">\r\n        {#if !isImport}\r\n            <ShipInput/>\r\n        {:else}\r\n            <ShipImport/>\r\n        {/if}\r\n\r\n        <h2 class=\"mb-1\">Active Heatsinks</h2>\r\n        <input type=\"text\" bind:value={$heatsinks} on:change={inputCheck} class=\"text-input small-text-input has-text-centered p-0\" placeholder=\"0\">\r\n\r\n        <h2 class=\"mb-1\">Target Range</h2>\r\n        <input type=\"text\" bind:value={$range} on:change={inputCheck} id=\"range\" class=\"text-input small-text-input has-text-centered p-0\" placeholder=\"1500\">\r\n    </div>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    @import 'src/theme';\r\n\r\n    .small-text-input {\r\n        width: 50px;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import { range, timeOnTargetData } from '../../../typescript/store';\r\n    import type { Thargoid } from '../../../typescript/data/dataFormat';\r\n\r\n    export let interceptor: Thargoid;\r\n\r\n    $: totData = $timeOnTargetData[interceptor.name];\r\n</script>\r\n\r\n<table class=\"table is-hoverable is-fullwidth mb-1\">\r\n    <thead>\r\n        <tr>\r\n            <th>{interceptor.name} @ {$range || 0}m</th>\r\n            <th>Basic</th>\r\n            <th>Standard</th>\r\n            <th>Premium</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <th class=\"\">100% Accuracy</th>\r\n            <td class=\"has-text-centered\" id=\"100Basic\">{totData.basicAmmo.tot100}</td>\r\n            <td class=\"has-text-centered\" id=\"100Std\">{totData.standardAmmo.tot100}</td>\r\n            <td class=\"has-text-centered\" id=\"100Prem\">{totData.premiumAmmo.tot100}</td>\r\n        </tr>\r\n        <tr>\r\n            <th>75% Accuracy</th>\r\n            <td class=\"has-text-centered\" id=\"75Basic\">{totData.basicAmmo.tot75}</td>\r\n            <td class=\"has-text-centered\" id=\"75Std\">{totData.standardAmmo.tot75}</td>\r\n            <td class=\"has-text-centered\" id=\"75Prem\">{totData.premiumAmmo.tot75}</td>\r\n        </tr>\r\n        <tr>\r\n            <th class=\"table-header-end\">50% Accuracy</th>\r\n            <td class=\"has-text-centered\" id=\"50Basic\">{totData.basicAmmo.tot50}</td>\r\n            <td class=\"has-text-centered\" id=\"50Std\">{totData.standardAmmo.tot50}</td>\r\n            <td class=\"has-text-centered\" id=\"50Prem\">{totData.premiumAmmo.tot50}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<style lang=\"scss\">\r\n    @import 'src/theme';\r\n\t.table {\r\n        border-collapse: collapse;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import InfoTable from './info-table/InfoTable.svelte';\r\n    import {\r\n        range,\r\n        heatsinks,\r\n        selectedWeapons,\r\n        sdpsExtraDelay,\r\n        selectedDistributor,\r\n        timeOnTargetData, setEmptyTotStore\r\n    } from \"../../typescript/store\";\r\n    import { gauss, AX_WEAPONS } from '../../typescript/data/weaponData'\r\n    import {\r\n        distributorRecharge,\r\n        distributorBlueprints,\r\n        distributorExperimentEffects\r\n    } from '../../typescript/data/distributorData'\r\n    import { THARGOID_TYPES } from '../../typescript/data/thargoidData'\r\n    import {\r\n        MIN_GAUSS_DELAY_MS,\r\n        HEATSINK_WEP_RECHARGE\r\n    } from '../../typescript/util'\r\n    import type {\r\n        AmmoToTData,\r\n        DistributorModifier,\r\n        SelectedWeapon,\r\n        WeaponInformation\r\n    } from '../../typescript/data/dataFormat';\r\n\r\n    const fireCalculation = (): void => {\r\n        const filteredWeapons: SelectedWeapon[] = Object.values($selectedWeapons).filter(selectedWeapon => selectedWeapon.name);\r\n        if (filteredWeapons.length === 0) {\r\n            $timeOnTargetData = setEmptyTotStore();\r\n            return;\r\n        }\r\n\r\n        calculateTot();\r\n    }\r\n\r\n    // Shorthand for subscribing to these stores. On change, they fire the method\r\n    $: $selectedWeapons, fireCalculation();\r\n    $: $selectedDistributor, fireCalculation();\r\n    $: $range, fireCalculation();\r\n    $: $heatsinks, fireCalculation();\r\n\r\n    const calculateSdps = (weapons: SelectedWeapon[]): void => {\r\n        let totalDraw = 0;\r\n        weapons.filter(selectedWeapon => selectedWeapon.name === 'gauss')\r\n               .forEach(selectedWeapon => {\r\n                   const weapon = gauss.options.find(option => option.weaponSize === selectedWeapon.class);\r\n                   totalDraw += weapon.distroDraw\r\n               });\r\n\r\n        const distributor = `${ $selectedDistributor.size }${ $selectedDistributor.class }`;\r\n        let weaponRecharge = distributorRecharge[distributor];\r\n        weaponRecharge = applyModifier(weaponRecharge, distributorBlueprints, $selectedDistributor.blueprint);\r\n        if ($selectedDistributor.blueprint) {\r\n            weaponRecharge = applyModifier(weaponRecharge, distributorExperimentEffects, $selectedDistributor.experimentEffect);\r\n        }\r\n\r\n        const delay = ((totalDraw / (weaponRecharge + (HEATSINK_WEP_RECHARGE * $heatsinks))) * 1000) - MIN_GAUSS_DELAY_MS;\r\n        $sdpsExtraDelay = delay < 0 ? 0 : delay;\r\n        gaussDamageOutput();\r\n    };\r\n\r\n    const applyModifier = (weaponRecharge: number, toSearch: DistributorModifier[], modifierName: string): number => {\r\n        if (!modifierName) {\r\n            return weaponRecharge;\r\n        }\r\n        const modifier = toSearch.find(modifier => modifier.shortName === modifierName);\r\n        return weaponRecharge * (1.0 + modifier.weaponRechargeModifier);\r\n    };\r\n\r\n    const gaussDamageOutput = (): void => {\r\n        gauss.options.forEach(option => {\r\n            option.rof = 1 / ((MIN_GAUSS_DELAY_MS + $sdpsExtraDelay) / 1000);\r\n            option.sustainedAxDps = (option.clipSize / option.rof) /\r\n                ((option.clipSize / option.rof) + option.reloadTime) * option.axDamage * option.rof;\r\n        });\r\n    };\r\n\r\n    const calculateTot = (): void => {\r\n        const filteredWeapons: SelectedWeapon[] = Object.values($selectedWeapons).filter(selectedWeapon => selectedWeapon.name);\r\n\r\n        calculateSdps(filteredWeapons);\r\n        resetCalculations(filteredWeapons);\r\n        weaponCalculations(filteredWeapons);\r\n\r\n        for (const thargoid of THARGOID_TYPES) {\r\n            let interceptorTotData = $timeOnTargetData[thargoid.name];\r\n\r\n            let adjDpsBasic = 0;\r\n            let adjDpsStandard = 0;\r\n            let adjDpsPremium = 0;\r\n            const uniqueWeapons = filteredWeapons.filter((weapon, index) =>\r\n                filteredWeapons.findIndex(selectedWeapon => selectedWeapon.name === weapon.name && selectedWeapon.class === weapon.class) === index);\r\n            for (const selectedWeapon of uniqueWeapons) {\r\n                const weaponOption = axWeaponsFind(selectedWeapon);\r\n                const adjDps = weaponOption.nDps * (weaponOption.armourPierce / thargoid.armourRating) * weaponOption.falloffFactor;\r\n                adjDpsBasic += adjDps;\r\n                adjDpsStandard += adjDps * weaponOption.stdAmmoPercent;\r\n                adjDpsPremium += adjDps * weaponOption.premAmmoPercent;\r\n            }\r\n            interceptorTotData.basicAmmo.adjDps = adjDpsBasic;\r\n            interceptorTotData.standardAmmo.adjDps = adjDpsStandard;\r\n            interceptorTotData.premiumAmmo.adjDps = adjDpsPremium;\r\n\r\n            const ammoTypes = [interceptorTotData.basicAmmo, interceptorTotData.standardAmmo, interceptorTotData.premiumAmmo];\r\n\r\n            const exertHP = thargoid.exertHp;\r\n            for (const ammo of ammoTypes) {\r\n                ammo.tot100 = (exertHP / (ammo.adjDps - thargoid.regenPerSecond)).toFixed(1);\r\n                ammo.tot75 = (exertHP / (ammo.adjDps * 0.75 - thargoid.regenPerSecond)).toFixed(1);\r\n                ammo.tot50 = (exertHP / (ammo.adjDps * 0.50 - thargoid.regenPerSecond)).toFixed(1);\r\n\r\n                adjustForImpossible(ammo);\r\n            }\r\n\r\n            // To trigger a refresh, re-assign the object on the store\r\n            $timeOnTargetData[thargoid.name] = interceptorTotData;\r\n        }\r\n    };\r\n\r\n    const adjustForImpossible = (ammoData: AmmoToTData): void => {\r\n        for (const [key, value] of Object.entries(ammoData)) {\r\n            if (value >= 0) {\r\n                continue;\r\n            }\r\n            ammoData[key] = 'N/A';\r\n        }\r\n    }\r\n\r\n    const resetCalculations = (filteredWeapons: SelectedWeapon[]): void => {\r\n        for (const selectedWeapon of filteredWeapons) {\r\n            const weapon = axWeaponsFind(selectedWeapon);\r\n            weapon.nDps = 0;\r\n            weapon.falloffFactor = 1;\r\n        }\r\n    };\r\n\r\n    const weaponCalculations = (filteredWeapons: SelectedWeapon[]): void => {\r\n        for (const selectedWeapon of filteredWeapons) {\r\n            const weapon = axWeaponsFind(selectedWeapon);\r\n            weapon.nDps += weapon.sustainedAxDps;\r\n            if ($range <= weapon.falloffRange) {\r\n                weapon.falloffFactor = 1;\r\n            }\r\n            else {\r\n                weapon.falloffFactor = 1 - (($range - weapon.falloffRange) / (weapon.maxRange - weapon.falloffRange));\r\n            }\r\n        }\r\n    };\r\n\r\n    const axWeaponsFind = (selectedWeapon: SelectedWeapon): WeaponInformation => {\r\n        const weapon = AX_WEAPONS.find(weapon => selectedWeapon.name === weapon.shortName);\r\n        return weapon.options.find(option => option.weaponSize === selectedWeapon.class);\r\n    };\r\n</script>\r\n\r\n<!-- The spacing needs to be worked on for sure -->\r\n\r\n<h1 class=\"title has-text-centered mt-1\">\r\n    Minimum Theoretical <br>\r\n    Time on Target\r\n</h1>\r\n\r\n{#each THARGOID_TYPES as interceptor}\r\n    <InfoTable {interceptor}/>\r\n{/each}\r\n","<script lang=\"ts\">\r\n    import { timeOnTargetData } from '../../../typescript/store';\r\n\r\n    export let interceptor: string;\r\n    export let accuracy: string;\r\n    export let ammo: string;\r\n\r\n    $: totData = $timeOnTargetData[interceptor];\r\n</script>\r\n\r\n<div class=\"is-relative\">\r\n    <img alt=\"{interceptor}\" class=\"image\" src=\"images/{interceptor}_Outline.png\">\r\n    <div class=\"graphic-text has-text-centered\">{totData[`${ ammo.toLowerCase() }Ammo`][`tot${ accuracy }`]}</div>\r\n</div>\r\n\r\n<style>\r\n    .image {\r\n        height: 145px;\r\n        width: 145px;\r\n    }\r\n\r\n    .graphic-text {\r\n        position: absolute;\r\n        top: 48%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import { THARGOID_TYPES } from '../../typescript/data/thargoidData'\r\n    import InterceptorData from './interceptor-data/InterceptorData.svelte';\r\n    import { selectedDistributor, sdpsExtraDelay } from '../../typescript/store';\r\n    import { MIN_GAUSS_DELAY_MS, MS_PER_MINUTE } from '../../typescript/util'\r\n\r\n    let shipName = '';\r\n    $: delay = Math.round($sdpsExtraDelay) + MIN_GAUSS_DELAY_MS;\r\n    $: bpm = Math.round(MS_PER_MINUTE / delay * 4);\r\n\r\n    let accuracy = '100';\r\n    let ammo = \"Basic\";\r\n\r\n    const distributorEngineering = () => {\r\n        const blueprint = $selectedDistributor.blueprint;\r\n        const effect = $selectedDistributor.experimentEffect;\r\n\r\n        if ($selectedDistributor.class === 'G') {\r\n            return 'Guardian';\r\n        } else if (!blueprint) {\r\n            return 'Not engineered';\r\n        }\r\n\r\n        return `${blueprint.toUpperCase()} + ${effect ? effect.toUpperCase() : 'No effect'}`;\r\n    }\r\n</script>\r\n\r\n<!--\r\n    At some point we need to put a button on this as when we add html2image in the future\r\n    we won't want it converting everytime there is an update and prompting a download.\r\n    Other then that this should all auto update.\r\n-->\r\n\r\n<div class=\"time-on-target-chart\">\r\n    <div class=\"mb-3 ml-2\">\r\n        <h1 class=\"mt-1 mb-0 has-text-centered\">Create a Chart</h1>\r\n\r\n        <h3 class=\"mt-2 mb-0\">Name your ship!</h3>\r\n        <input type=\"text\" bind:value={shipName} class=\"text-input large-text-input p-0 has-text-centered\" placeholder=\"Ship Name Here\">\r\n\r\n        <h3 class=\"mt-2 mb-0\">Ammo Selection</h3>\r\n        <select class=\"dropdown-select mt-1\" bind:value={ammo}>\r\n            <option value=\"Basic\">Basic</option>\r\n            <option value=\"Standard\">Standard</option>\r\n            <option value=\"Premium\">Premium</option>\r\n        </select>\r\n\r\n        <h3 class=\"mt-2 mb-0\">Accuracy</h3>\r\n        <select class=\"dropdown-select mt-1\" bind:value={accuracy}>\r\n            <option value=\"100\">100%</option>\r\n            <option value=\"75\">75%</option>\r\n            <option value=\"50\">50%</option>\r\n        </select>\r\n\r\n    </div>\r\n    <div>\r\n        <div class=\"create-a-chart-container\">\r\n            <div class=\"ml-2 mt-3\">\r\n                <div class=\"has-font-20 mt-1\">{shipName || \"AX Ship\"}</div>\r\n                <div class=\"has-font-20 mt-1\">\r\n                    {`${$selectedDistributor.size}${$selectedDistributor.class}\r\n                     distributor (${distributorEngineering()})`\r\n                    }\r\n                </div>\r\n                <div class=\"has-font-20 mt-1\">{ammo} ammo</div>\r\n                <div class=\"has-font-20 mt-1\">{accuracy}% accuracy</div>\r\n                <div class=\"has-font-20 mt-1\">{delay}ms ({bpm} BPM)</div>\r\n            </div>\r\n\r\n            <div class=\"graphic mt-4 is-justify-content-center\">\r\n                {#each THARGOID_TYPES as interceptor}\r\n                    <InterceptorData bind:accuracy bind:ammo interceptor={interceptor.name}/>\r\n                {/each}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<style lang=\"scss\">\r\n    @import \"src/theme\";\r\n\r\n    .time-on-target-chart {\r\n        display: grid;\r\n        grid-template-rows: 1fr 2fr;\r\n    }\r\n\r\n    .large-text-input {\r\n        width: 200px;\r\n    }\r\n\r\n    .graphic {\r\n        display: grid;\r\n        grid-template-columns: 145px 145px;\r\n        grid-template-rows: 145px 145px;\r\n    }\r\n\r\n    .has-font-20 {\r\n        font-size: 20px;\r\n    }\r\n\r\n    .create-a-chart-container {\r\n        border-top: 3px solid $orange;\r\n    }\r\n</style>\r\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","select_option","select","option","__value","selected","select_value","selected_option","querySelector","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","indexOf","splice","$$props","obj","$$set","keys","WeaponType","gauss","weaponName","shortName","weaponType","FIXED","weaponSize","clipSize","rof","reloadTime","distroDraw","damage","axPercent","axDamage","sustainedAxDps","nDps","armourPierce","falloffRange","falloffFactor","maxRange","stdAmmoPercent","premAmmoPercent","plasma","shard","axmc","axmct","TURRETED","axmr","DUMB_FIRE","AX_WEAPONS","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","THARGOID_TYPES","armourRating","regenPerSecond","exertHp","MIN_GAUSS_DELAY_MS","setEmptyTotStore","totData","basicAmmo","adjDps","tot100","tot75","tot50","standardAmmo","premiumAmmo","selectedWeapons","weapons","class","buildStarterWeaponStore","range","selectedDistributor","size","blueprint","experimentEffect","heatsinks","sdpsExtraDelay","timeOnTargetData","findAxWeapon","find","axWeapon","updateStore","$selectedWeapons","selectedWeapon","distributorRecharge","1A","1G","1B","1C","1D","1E","2A","2G","2B","2C","2D","2E","3A","3G","3B","3C","3D","3E","4A","4G","4B","4C","4D","4E","5A","5G","5B","5C","5D","5E","6A","6G","6B","6C","6D","6E","7A","7G","7B","7C","7D","7E","8A","8G","8B","8C","8D","8E","distributorBlueprints","weaponRechargeModifier","distributorExperimentEffects","distributorSizes","distributorClasses","heatsinkInput","Number","$heatsinks","rangeInput","$range","isInteger","interceptor","$timeOnTargetData","fireCalculation","values","calculateTot","applyModifier","weaponRecharge","toSearch","modifierName","modifier","gaussDamageOutput","$sdpsExtraDelay","filteredWeapons","totalDraw","weapon","distributor","$selectedDistributor","delay","calculateSdps","resetCalculations","weaponCalculations","thargoid","interceptorTotData","adjDpsBasic","adjDpsStandard","adjDpsPremium","uniqueWeapons","findIndex","weaponOption","axWeaponsFind","ammoTypes","exertHP","ammo","toFixed","adjustForImpossible","ammoData","key","entries","accuracy","shipName","Math","round","bpm","effect","toUpperCase","body"],"mappings":"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"}